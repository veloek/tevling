@page "/Statistics"
<PageTitle>Tevling - Statistics</PageTitle>

<h1 class="title mb-5">Statistics</h1>

<label>Months:</label>
<InputSelect @bind-Value="@_numberOfMonthsToReview" @oninput="DrawChart" class="mb-2">
    @for (int i = 1; i <= 36; i++)
    {
        <option value="@i">@i</option>
    }
</InputSelect>
<ButtonGroup
    Items="Enum.GetValues<ChallengeMeasurement>()"
    T="ChallengeMeasurement"
    @bind-SelectedItem="_measurement"
    OnButtonSelected="@DrawChart">
</ButtonGroup>

<div class="d-flex flex-wrap p-2">
    <canvas id="TheChart"></canvas>
</div>

<h2 class="title mb-5">Summary</h2>
<p>The last <b>@_numberOfMonthsToReview</b> month(s) you've:</p>

@switch (_measurement)
{
    case ChallengeMeasurement.Distance:
        @foreach (KeyValuePair<string, float[]> kvp in _distances)
        {
            <p>- Traversed <b>@Math.Round(kvp.Value.Sum(), 1)</b>km by @kvp.Key: </p>
        }

        <p>A total of <b>@Math.Round(_distances.Sum(kvp => kvp.Value.Sum()), 1)</b>km</p>
        break;
    case ChallengeMeasurement.Elevation:
        @foreach (KeyValuePair<string, float[]> kvp in _elevations)
        {
            <p>- Ascended <b>@Math.Round(kvp.Value.Sum(), 1)</b>m by @kvp.Key: </p>
        }

        <p>A total of <b>@Math.Round(_elevations.Sum(kvp => kvp.Value.Sum()), 1)</b>m</p>
        break;
    case ChallengeMeasurement.Time:
        @foreach (KeyValuePair<string, float[]> kvp in _durations)
        {
            <p>- Spent <b>@Math.Round(kvp.Value.Sum(), 1)</b> hours on @kvp.Key: </p>
        }

        <p>A total of <b>@Math.Round(_durations.Sum(kvp => kvp.Value.Sum()), 1)</b> hours</p>
        break;
    default:
            throw new ArgumentOutOfRangeException();
}

