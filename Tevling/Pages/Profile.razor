@page "/profile"

<h1 class="title mb-5">@Loc["Profile"]</h1>
<div class="profile d-flex flex-row column-gap-2 mb-5">
    <Avatar Url="@Athlete.ImgUrl" Size="50"/>
    <div class="d-flex flex-column">
        <span class="profile-name">@Athlete.Name</span>
        <span class="member-since">@string.Format(Loc["MemberSince"], @CreatedTime)</span>
        <a href="/athletes/@Athlete.Id"><span class="member-since">@Loc["SeePublic"]</span></a>
    </div>
</div>

<div class="d-flex flex-row flex-wrap">
    <div class="profile-info d-flex flex-column row-gap-5">

        @if (Athlete.PendingFollowers?.Count > 0 && Athlete.PendingFollowers is not null)
        {
            <div class="follow-requests">
                <h2 class="mb-3">@Loc["FollowRequests"]</h2>
                <div class="d-flex flex-column row-gap-3">
                    @foreach (Athlete? pendingFollower in Athlete.PendingFollowers)
                    {
                        <AthleteCard Athlete="@pendingFollower"
                                     IsFollowing="Athlete.IsFollowing(pendingFollower.Id)"
                                     FollowingStatusChanged="() => ToggleFollowing(pendingFollower.Id)"
                                     IsFollower="@Athlete.IsFollower(pendingFollower.Id)"
                                     IsPendingFollowing="@Athlete.IsPendingFollowing(pendingFollower.Id)"
                                     IsPendingFollower="@Athlete.IsPendingFollower(pendingFollower.Id)"
                                     AcceptFollower="() => AcceptFollower(pendingFollower.Id)"
                                     DeclineFollower="() => DeclineFollower(pendingFollower.Id)"
                        />
                    }
                </div>
            </div>
        }

        <div class="followers">
            <h2 class="mb-3">@Loc["Followers"]</h2>
            @if (Athlete.Followers?.Count == 0 || Athlete.Followers is null)
            {
                <span>@Loc["NoFollowers"]</span>
            }
            else
            {
                <div class="d-flex flex-column row-gap-3">

                    @foreach (Athlete? follower in Athlete.Followers)
                    {
                        <AthleteCard Athlete="@follower"
                                     IsFollowing="Athlete.IsFollowing(follower.Id)"
                                     FollowingStatusChanged="() => ToggleFollowing(follower.Id)"
                                     IsFollower="@Athlete.IsFollower(follower.Id)"
                                     IsPendingFollowing="@Athlete.IsPendingFollowing(follower.Id)"
                                     RemoveFollower="() => RemoveFollower(follower.Id)" />
                    }
                </div>
            }
        </div>

        <div class="following mb-5">
            <h2 class="mb-3">@Loc["Following"]</h2>
            @if ((Athlete.Following?.Count == 0 || Athlete.Following is null) && (Athlete.PendingFollowing?.Count == 0 || Athlete.PendingFollowing is null))
            {
                <span>@Loc["NoFollowings"]</span>
            }
            else
            {
                <div class="d-flex flex-column row-gap-3">
                    @if (Athlete.Following is not null)
                    {
                        @foreach (Athlete? following in Athlete.Following)
                        {
                            <AthleteCard Athlete="@following"
                                         IsFollowing="true"
                                         FollowingStatusChanged="() => ToggleFollowing(following.Id)" />
                        }
                    }
                    @if (Athlete.PendingFollowing is not null)
                    {
                        @foreach (Athlete? pendingAthlete in Athlete.PendingFollowing)
                        {
                            <AthleteCard Athlete="@pendingAthlete"
                                         IsFollowing="@Athlete.IsFollowing(pendingAthlete.Id)"
                                         IsPendingFollowing="@Athlete.IsPendingFollowing(pendingAthlete.Id)"
                                         FollowingStatusChanged="() => ToggleFollowing(pendingAthlete.Id)" />
                        }
                    }
                </div>
            }

        </div>

    </div>
    <div class="profile-actions mb-5">
        <div class="d-flex flex-column row-gap-3">
            <h4 class="mt-4">@Loc["Import_title"]</h4>
            <span>@(new MarkupString(Loc["Import_body"]))</span>
            <button class="btn btn-primary" @onclick="Import" disabled="@(Importing || Athlete.HasImportedActivities)">
                <i class="bi bi-box-arrow-in-down me-1" aria-hidden="true"></i>
                @if (Athlete.HasImportedActivities)
                {
                    <text>@Loc["ImportComplete"]</text>
                }
                else if (Importing)
                {
                    <text>@Loc["Importing"]...</text>
                }
                else
                {
                    <text>@Loc["ImportActivities"]</text>
                }
            </button>
            @if (!string.IsNullOrEmpty(ImportResult))
            {
                <p>@ImportResult</p>
            }
        </div>

        <div class="d-flex flex-column row-gap-2">
            <h4 class="mt-4">@Loc["Signout_title"]</h4>
            <span>@Loc["Signout_body"]</span>
            <a class="btn btn-secondary mt-1" href="/auth/logout">
                <i class="bi bi-box-arrow-right me-1" aria-hidden="true"></i>@Loc["SignOut"]
            </a>
        </div>

        <div class="d-flex flex-column row-gap-2">
            <h4 class="mt-4">@Loc["DeleteAccount_title"]</h4>
            <span class="text-danger">@(new MarkupString(Loc["DeleteAccount_body"]))</span>
            <a class="btn btn-danger mt-1" data-bs-toggle="modal" data-bs-target="#deleteAccount">
                <i class="bi bi-trash-fill me-1" aria-hidden="true"></i>@Loc["ForgetMe"]
            </a>
        </div>
    </div>
</div>


<Modal Id="deleteAccount" Size="sm">
    <HeaderContent>
        <span>@Loc["DeleteAccount_title"]</span>
    </HeaderContent>
    <BodyContent>
        <i class="bi bi-trash delete-account-modal-icon" aria-hidden="true"></i>
        <span class="text-center delete-account-modal-text">@Loc["DeleteAccount_confirm"]</span>
    </BodyContent>
    <FooterContent>
        <a class="btn btn-danger mt-1 delete-account-modal-button" href="/auth/logout?deauthorize=true">@Loc["DeleteAccount"]</a>
        <button class="btn btn-secondary mt-1 delete-account-modal-button" data-bs-dismiss="modal">@Loc["Cancel"]</button>
    </FooterContent>
</Modal>
