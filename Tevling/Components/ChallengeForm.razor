@using Tevling.Strava
<EditForm FormName="challenge" method="post" Model="@Challenge" OnValidSubmit="SubmitForm">
    <div class="d-flex flex-row mb-3 column-gap-5 flex-wrap">
        <div class="left-column me-5">
            <div class="form-row mb-5">
                <label>
                    Title
                    <InputText @bind-Value="@Challenge.Title" size="50" class="form-control" />
                </label>
            </div>
            <div class="form-row mb-5">
                <label>
                    Description
                    <InputTextArea @bind-Value="@Challenge.Description" cols="50" rows="4" class="form-control" />
                </label>
            </div>
            <div class="form-row mb-5">
                <label class="me-4">
                    Start
                    <InputDate @bind-Value="@Challenge.Start" Type="InputDateType.Date"
                               max="@Challenge.End.ToString("yyyy-MM-dd")" class="form-control" />
                </label>
                <label>
                    End
                    <InputDate @bind-Value="@Challenge.End" Type="InputDateType.Date"
                               min="@Challenge.Start.ToString("yyyy-MM-dd")" class="form-control" />
                </label>
            </div>
            <div class="form-row mb-5 d-flex column-gap-5">
                <div>
                    <h5 class="mb-3">Challenge type</h5>
                    <InputRadioGroup @bind-Value="@Challenge.Measurement">
                        @foreach (ChallengeMeasurement measurement in Enum.GetValues<ChallengeMeasurement>())
                        {
                            <div>
                                <InputRadio Value="@measurement" class="me-2 form-check-input" /><label>@measurement</label>
                            </div>
                        }
                    </InputRadioGroup>
                </div>
                <div>
                    <h5 class="mb-3">Challenge visibility</h5>
                    <InputRadioGroup @bind-Value="@Challenge.IsPrivate">
                        <div>
                            <InputRadio Value="false" class="form-check-input" /> <label>Public challenge</label>
                        </div>
                        <div>
                            <InputRadio Value="true" class="form-check-input" /> <label>Private challenge</label>
                        </div>
                    </InputRadioGroup>
                </div>
            </div>
            <div class="form-row mb-2 activity-types-selection">
                <h5 class="mb-3">Activity types</h5>
                <div class="mb-3">
                    <DropdownSearch Items="@ActivityTypes" T="ActivityType"
                                    DisplayFunc="@ActivityTypeExt.ToString"
                                    @bind-SelectedItems="@Challenge.ActivityTypes"
                                    @ref="_dropdownSearchRefActivityTypes">
                    </DropdownSearch>
                </div>
                <div class="mb-5">
                    @if (Challenge.ActivityTypes.Count == 0)
                    {
                        <a type="button" class="btn btn-primary selected-activity-type py-1">All activities</a>
                    }
                    <div class="d-flex flex-wrap column-gap-2 row-gap-1">
                        @foreach (ActivityType item in Challenge.ActivityTypes)
                        {
                            <a @onclick="() => DeselectActivityType(item)" type="button" class="btn btn-primary selected-activity-type">
                                @ActivityTypeExt.ToString(item)<i class="bi bi-x ms-1"></i>
                            </a>
                        }
                    </div>
                </div>
                <h5 class="mb-3">Templates</h5>
                <div class="mb-5">
                    <select class="form-select mb-3" @onchange="e => LoadSelectedTemplate(e.Value)">
                        <option value="">Select a template to load</option>
                        @for (int i = 0; i < Templates.Count; i++)
                        {
                            <option value="@i">@Templates[i].Title</option>
                        }
                    </select>
                    <div class="form-row">
                        <label>
                            <a class="btn btn-primary selected-activity-type py-1" type="button" data-bs-toggle="modal"
                               data-bs-target="#templateCreated"
                               @onclick="CreateChallengeTemplate">Save as template</a>
                        </label>
                        <label>
                            <a class="btn btn-danger selected-activity-type py-1" type="button" data-bs-toggle="modal"
                               data-bs-target="#deleteTemplate">Delete template(s)</a>
                        </label>
                    </div>
                </div>
            </div>

            <DataAnnotationsValidator />
            <ValidationSummary />

        </div>

        @if (Challenge.IsPrivate)
        {
            <div class="right-column">
                <h5 class="mb-3">Athletes</h5>
                <DropdownSearch T="Athlete"
                                DisplayFunc="@AthletesDisplayFunc"
                                CustomSearchFuncAsync="@SearchAthletes"
                                @bind-SelectedItems="@Challenge.InvitedAthletes"
                                @ref="_dropdownSearchRefAthletes">
                </DropdownSearch>
                <div class="d-flex flex-column row-gap-1 mt-3">
                    @foreach (Athlete? athlete in Challenge.InvitedAthletes)
                    {
                        <div class="d-flex selected-athlete column-gap-2">
                            <a @onclick="() => DeselectAthlete(athlete)" type="button">
                                <i class="bi bi-x-circle ms-1"></i>
                            </a>
                            <Avatar Url="@athlete.ImgUrl" Size="30" />
                            @AthletesDisplayFunc(athlete)
                        </div>
                    }
                </div>
            </div>
        }
    </div>
    <div class="form-group mt-5 mb-5">
        <button class="btn btn-primary" type="submit">@SubmitLabel</button>
        <button class="btn btn-secondary" type="button" @onclick="Cancel">@CancelLabel</button>
    </div>

</EditForm>

<Modal Id="deleteTemplate" Size="sm">
    <HeaderContent>
        <span>Delete template(s)</span>
    </HeaderContent>
    <BodyContent>
        <i class="bi bi-trash delete-account-modal-icon" aria-hidden="true"></i>
        <span class="text-center delete-account-modal-text">Select template(s) to delete:</span>
        <div class="d-flex flex-column align-items-start">
            @foreach (ChallengeTemplate template in Templates)
            {
                <div class="form-check d-flex align-items-start">
                    <input class="form-check-input" type="checkbox" @bind="TemplatesSelectedForDeletion[template.Id]"/>
                    <label class="form-check-label">@template.Title</label>
                </div>
            }
        </div>
    </BodyContent>
    <FooterContent>
        <button class="btn btn-danger mt-1 delete-account-modal-button" data-bs-dismiss="modal"
                @onclick="DeleteTemplates">Delete selected
        </button>
        <button class="btn btn-secondary mt-1 delete-account-modal-button" data-bs-dismiss="modal">Cancel</button>
    </FooterContent>
</Modal>

<Modal Id="templateCreated" Size="sm">
    <BodyContent>
        <i class="bi bi-clipboard2-check-fill delete-account-modal-icon" aria-hidden="true"></i>
        <span class="text-center delete-account-modal-text">Template "@Challenge.Title" created!</span>
    </BodyContent>
    <FooterContent>
        <button class="btn btn-secondary mt-1 delete-account-modal-button" data-bs-dismiss="modal">Nice</button>
    </FooterContent>
</Modal>
